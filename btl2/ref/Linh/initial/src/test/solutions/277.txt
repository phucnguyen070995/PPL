Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(n,IntType),VarDecl(reversedInteger,IntType),VarDecl(remainder,IntType),VarDecl(originalInteger,IntType),BinaryOp(=,Id(n),IntLiteral(18071999)),BinaryOp(=,Id(reversedInteger),IntLiteral(0)),BinaryOp(=,Id(originalInteger),Id(n)),For(Id(n);BinaryOp(!=,Id(n),IntLiteral(0));BinaryOp(=,Id(n),BinaryOp(/,Id(n),IntLiteral(10)));Block([BinaryOp(=,Id(remainder),BinaryOp(%,Id(n),IntLiteral(10))),BinaryOp(=,Id(reversedInteger),BinaryOp(+,BinaryOp(*,Id(reversedInteger),IntLiteral(10)),Id(remainder)))])),If(BinaryOp(==,Id(originalInteger),Id(reversedInteger)),CallExpr(Id(printf),[StringLiteral(%d is a palindrome.),Id(originalInteger)]),CallExpr(Id(printf),[StringLiteral(%d is not a palindrome.),Id(originalInteger)])),Return(IntLiteral(0))]))])