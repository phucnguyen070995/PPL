Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(a,FloatType),VarDecl(b,FloatType),VarDecl(c,FloatType),VarDecl(d,FloatType),BinaryOp(=,Id(a),IntLiteral(1)),BinaryOp(=,Id(b),UnaryOp(-,IntLiteral(2))),BinaryOp(=,Id(c),IntLiteral(1)),If(BinaryOp(==,Id(a),IntLiteral(0)),Block([If(BinaryOp(==,Id(b),IntLiteral(0)),Block([If(BinaryOp(==,Id(c),IntLiteral(0)),CallExpr(Id(printf),[StringLiteral(PT VSN!)]),CallExpr(Id(printf),[StringLiteral(PT VN!)]))]),CallExpr(Id(printf),[StringLiteral(PT co 1 Nghiem la: %f),BinaryOp(/,UnaryOp(-,Id(c)),Id(b))]))]),Block([BinaryOp(=,Id(d),BinaryOp(-,BinaryOp(*,Id(b),Id(b)),BinaryOp(*,BinaryOp(*,IntLiteral(4),Id(a)),Id(c)))),If(BinaryOp(<,Id(d),IntLiteral(0)),CallExpr(Id(printf),[StringLiteral(PT VN!)]),If(BinaryOp(==,Id(d),IntLiteral(0)),CallExpr(Id(printf),[StringLiteral(PT co Nghiem kep la: %f),BinaryOp(/,UnaryOp(-,Id(b)),BinaryOp(*,IntLiteral(2),Id(a)))]),CallExpr(Id(printf),[StringLiteral(PT co 2 Nghiem PB la: %f,%f),BinaryOp(/,BinaryOp(+,UnaryOp(-,Id(b)),CallExpr(Id(sqrt),[Id(d)])),BinaryOp(*,IntLiteral(2),Id(a))),BinaryOp(/,BinaryOp(-,UnaryOp(-,Id(b)),CallExpr(Id(sqrt),[Id(d)])),BinaryOp(*,IntLiteral(2),Id(a)))])))]))]))])