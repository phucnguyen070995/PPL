Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(i,IntType),VarDecl(n,IntType),VarDecl(t1,IntType),VarDecl(t2,IntType),VarDecl(nextTerm,IntType),CallExpr(Id(printf),[StringLiteral(Enter the number of terms: )]),CallExpr(Id(scanf),[Id(n)]),CallExpr(Id(printf),[StringLiteral(Fibonacci Series: )]),For(BinaryOp(=,Id(i),IntLiteral(1));BinaryOp(<=,Id(i),Id(n));BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1)));Block([CallExpr(Id(printf),[Id(t1)]),BinaryOp(=,Id(nextTerm),BinaryOp(+,Id(t1),Id(t2))),BinaryOp(=,Id(t1),Id(t2)),BinaryOp(=,Id(t2),Id(nextTerm))])),Return(IntLiteral(0))]))])