class Exp:

    def accept(self, visitor):
        return visitor.visit(self)

    def eval(self):
        return eval(str(self))

    def printPrefix(self):
        # print(self.printPrefix())
        pass

    def printPostfix(self):
        # print(self.printPrefix())
        pass

class IntLit(Exp):
    def __init__(self, num):
        self.num = num

    # @override
    def __str__(self):
        return str(self.num)

    def printPrefix(self):
        return str(self.num)

    def printPostfix(self):
        return str(self.num)

class FloatLit(Exp):
    def __init__(self, num):
        self.num = num

    # @override
    def __str__(self):
        return str(self.num)

    def printPrefix(self):
        return str(self.num)

    def printPostfix(self):
        return str(self.num)

class UnExp(Exp):
    def __init__(self, operator, operand):
        self.operator = operator
        self.operand = operand
    
    def __str__(self):
        return self.operator + str(self.operand)

    def printPrefix(self):
        return str(self.operator + ". " + self.operand.printPrefix())

    def printPostfix(self):
        return str(self.operand.printPrefix() + " " + self.operator + ".")

class BinExp(Exp):
    def __init__(self, left,operator, right):
        self.operator = operator
        self.left = left
        self.right = right

    def __str__(self):
        return str(self.left) + " " + self.operator + " " + str(self.right)

    def printPrefix(self):
        return str(self.operator + " " + self.left.printPrefix() + " " + self.right.printPrefix())

    def printPostfix(self):
        return str(self.left.printPostfix() + " " + self.right.printPostfix() + " " + self.operator)

class Visitor:
    pass
    # def __str__(self):
    #     return self.__class__.__name__

class Eval(Visitor):
    def visit(self, exp):
        return exp.eval()

class PrintPrefix(Visitor):
    def visit(self, exp):
        return exp.printPrefix()

class PrintPostfix(Visitor):
    def visit(self, exp):
        return exp.printPostfix()